name: "Semantic Version Tag Bump"
description: "Bumps the GitHub tag based on PR title and outputs the new tag"

inputs:
  github_token:
    description: "GitHub token to create tags"
    required: true

outputs:
  new_tag:
    description: "The newly created tag or predicted next tag (dry run)"

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Get latest tag
      id: get-latest-tag
      run: |
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.1")
        echo "Latest tag: $latest_tag"
        echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      shell: bash

    - name: Determine next version
      id: bump-version
      run: |
        LATEST_TAG=${{ env.latest_tag }}
        LATEST_TAG=${LATEST_TAG#v} # Remove 'v' prefix for processing
        MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
        MINOR=$(echo $LATEST_TAG | cut -d. -f2)
        PATCH=$(echo $LATEST_TAG | cut -d. -f3)

        BUMP_TYPE="patch" # default bump

        if [ "$LATEST_TAG" == "0.0.1" ]; then
          case "${{ github.event.pull_request.title }}" in
            *#major*) MAJOR=1; MINOR=0; PATCH=0; BUMP_TYPE="major" ;;
            *#minor*) MAJOR=0; MINOR=1; PATCH=0; BUMP_TYPE="minor" ;;
            *) MAJOR=0; MINOR=0; PATCH=1; BUMP_TYPE="patch" ;; # Default to patch bump
          esac
        else
          case "${{ github.event.pull_request.title }}" in
            *#major*) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0; BUMP_TYPE="major" ;;
            *#minor*) MINOR=$((MINOR + 1)); PATCH=0; BUMP_TYPE="minor" ;;
            *#patch*) PATCH=$((PATCH + 1)); BUMP_TYPE="patch" ;;
            *) PATCH=$((PATCH + 1)); BUMP_TYPE="patch" ;; # Default to patch bump
          esac
        fi

        NEW_TAG="v$MAJOR.$MINOR.$PATCH"
        echo "Predicted next tag: $NEW_TAG"
        echo "new_tag=$NEW_TAG" >> $GITHUB_ENV
        echo "major_tag=v$MAJOR" >> $GITHUB_ENV
        echo "bump_type=$BUMP_TYPE" >> $GITHUB_ENV
      shell: bash

    - name: Create and push tag (if not dry run)
      if: github.event_name != 'pull_request'
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git tag ${{ env.new_tag }}
        git push origin ${{ env.new_tag }}

        # Update the major tag to point to the latest release
        git tag -f ${{ env.major_tag }}
        git push origin ${{ env.major_tag }} --force
      shell: bash

    - name: Add result to job summary
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "Dry run: Predicted next tag will be **${{ env.new_tag }}** (bump type: ${{ env.bump_type }})" >> $GITHUB_STEP_SUMMARY
          echo "Major tag will be updated to **${{ env.major_tag }}**" >> $GITHUB_STEP_SUMMARY
        else
          echo "New tag **${{ env.new_tag }}** has been created and pushed (bump type: ${{ env.bump_type }})." >> $GITHUB_STEP_SUMMARY
          echo "Major tag **${{ env.major_tag }}** has been updated." >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash
